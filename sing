#!/bin/sh

escape() { 
    echo "$1" | sed 's/\([\.\$\*]\)/\\\1/g'
}

warn() {
    echo "$@" >&2;
}

die() { 
    warn "$@"
    exit 1
}

has() {
    local item=$1
    shift
    echo " $@ " | grep -q " $(escape $item) "
}

git_local_branches() { 
    git branch --no-color | sed 's/^[* ] //'
}

git_is_clean_working_tree() {
    if [ ! git diff --no-ext-diff --ignore-submodules --quiet --exit-code ]; then
       return 1
    fi
    if [ ! git diff-index --cached --quiet --ignore-submodules HEAD -- ]; then
       return 2
    fi
    return 0
}

usage() {
    echo "usage: sing <subcommand>"
    echo "available subcommands:"
}

main() {
    if ! git rev-parse --git-dir >/dev/null 2>&1; then
	die "fatal: Not a git repository"
    fi

    MASTER="master"
    if ! has $MASTER $(git_local_branches); then
	die "fatal: branch $MASTER not found"
    fi
    
    if test $# -eq 0; then
	usage
	die
    fi
}

main "$@"
